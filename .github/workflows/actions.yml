---
name: CI

on:
  push:
    tags: ["release/v*"]
    branches: ["master"]
  pull_request:
    branches: ["master"]
  workflow_dispatch:

jobs:
  tests:
    name: "Tests on Python ${{ matrix.python-version }} on ${{ matrix.os }}"
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: "actions/checkout@v3"
      - uses: "actions/setup-python@v4"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: Install package under test
        run: |
          python -m pip install --upgrade pip
          python -m pip install ".[test]"
      - name: Install dbus
        if: ${{ matrix.os=='ubuntu-latest' }}
        run: sudo apt-get install -y dbus-x11
      - name: Run headless test (Linux)
        if: ${{ matrix.os=='ubuntu-latest' }}
        run: xvfb-run python -m pytest tests/
        # uses: coactions/setup-xvfb@v1
        # with:
        #   run: python -m pytest tests/
      - name: Run tests
        if: ${{ matrix.os!='ubuntu-latest' }}
        run: |
          python -m pytest tests/

  package:
    name: "Build Package Distributions"
    needs: tests
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v3"
      - uses: "actions/setup-python@v4"
        with:
          python-version: "3.10"
      - name: "Build distribution"
        run: |
          python -m pip install --upgrade pip
          python -m pip install build
          python -m build
      - name: Publish package
        if: startsWith(github.ref, 'refs/tags/release/v')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
